apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "ingress.fullname" . }} 
  labels:
    gloo: ingress
    app: {{ template "ingress.name" .}}
    chart: {{ template "gloo-chart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.ingress.replicaCount }}
  selector:
    matchLabels:
      app:  {{ template "ingress.name" . }}
      gloo: ingress
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app:  {{ template "ingress.name" . }}
        gloo: ingress
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: assignnodeid
        image: busybox
        command:
        - sed
        - s/NODE_ID_PLACE_HOLDER/$(POD_NAME).$(POD_NAMESPACE)/
        - -i
        - "/config/envoy.yaml"
        volumeMounts:
        - name: envoy-config
          mountPath: /config
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
      containers:
      - name: envoy
        image: "{{ .Values.ingress.image }}:{{ .Values.ingress.imageTag }}"
        ports: 
        - containerPort: {{ .Values.ingress.port }}
          name: http
        - containerPort: {{ .Values.ingress.securePort }} 
          name: https
        - containerPort: {{ .Values.ingress.adminPort }}
          name: admin
        command: ["envoy"]
        args: ["-c", "/etc/envoy.yaml", "--v2-config-only"]
        volumeMounts:
        - name: envoy-config
          mountPath: /config
      volumes:
      - name: envoy-config
        configMap:
          name: {{ template "ingress.fullname" .}}-config 
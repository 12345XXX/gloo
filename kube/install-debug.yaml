---
#system namespace
apiVersion: v1
kind: Namespace
metadata:
  name: gloo-system
---
#system namespace
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
# gloo pods
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: gloo
  name: gloo
  namespace: gloo-system
spec:
  selector:
    matchLabels:
      app: gloo
  replicas: 1
  template:
    metadata:
      labels:
        app: gloo
    spec:
      containers:
      - image: solo-io/gloo:v0.1
        imagePullPolicy: Never
        name: gloo
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: GRPC_TRACE
          value: "all"
        - name: DEBUG
          value: "1"
        command: ["/gloo"]
        args:
        - "--storage.type=kube"
        - "--storage.refreshrate=30m"
        - "--secrets.type=kube"
        - "--secrets.refreshrate=30m"
        - "--xds.port=8081"
        - "--kube.namespace=gloo-system"
---
# gloo service
apiVersion: v1
kind: Service
metadata:
  name: gloo
  labels:
    sevice: gloo
  namespace: gloo-system
spec:
  ports:
  - port: 8081
    protocol: TCP
  selector:
    app: gloo
---
apiVersion: v1
data:
  envoy.yaml: |
    node:
      cluster: ingress
      id: ingress

    static_resources:
      clusters:

      - name: xds_cluster
        connect_timeout: 5.000s
        hosts:
        - socket_address:
            address: gloo
            port_value: 8081
        http2_protocol_options: {}
        type: STRICT_DNS

      - name: statsd
        connect_timeout: 1s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: statsd.monitoring.svc.cluster.local
            port_value: 9125

      - name: jaeger
        connect_timeout: 1s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: jaeger.monitoring.svc.cluster.local
            port_value: 9411

    stats_flush_interval:
      seconds: 5

    stats_sinks:
    - name: envoy.statsd
      config:
        tcp_cluster_name: statsd

    tracing:
      http:
        name: envoy.zipkin
        config:
          collector_cluster: jaeger
          collector_endpoint: "/api/v1/spans"

    dynamic_resources:
      ads_config:
        api_type: GRPC
        cluster_names:
        - xds_cluster
      cds_config:
        ads: {}
      lds_config:
        ads: {}

    admin:
      access_log_path: /dev/null
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 19000
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: gloo-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: envoy
  name: envoy
  namespace: gloo-system
spec:
  selector:
    matchLabels:
      app: envoy
  replicas: 1
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
      - image: docker.io/envoyproxy/envoy-alpine:latest
        name: envoy
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        - containerPort: 19000
          name: admin
        command: ["envoy"]
        args: ["-c", "/config/envoy.yaml", "--v2-config-only", "--service-cluster", "envoy", "--service-node", "envoy"]
        volumeMounts:
        - name: envoy-config
          mountPath: /config
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-config
---
apiVersion: v1
kind: Service
metadata:
  name: envoy
  labels:
    sevice: envoy
  namespace: gloo-system
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: http
  - port: 8443
    protocol: TCP
    name: https
  - port: 19000
    protocol: TCP
    name: admin
  selector:
    app: envoy
  type: NodePort





---
# statsd service
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: statsd
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: statsd
  template:
    metadata:
      name: statsd
      namespace: monitoring
      labels:
        app: statsd
    spec:
      containers:
      - name: statsd
        image: prom/statsd-exporter:latest
        ports:
        - name: web
          containerPort: 9102
        - name: statsd
          containerPort: 9125
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9102
          initialDelaySeconds: 15
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
  labels:
    name: statsd
  name: statsd
  namespace: monitoring
spec:
  selector:
    app: statsd
  ports:
  - name: web
    protocol: TCP
    port: 9102
  - name: statsd
    protocol: TCP
    port: 9125






---
# jaeger deployment
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: jaeger
  replicas: 1
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      containers:
      - image: jaegertracing/all-in-one:latest
        env:
        - name: COLLECTOR_ZIPKIN_HTTP_PORT
          value: "9411"
        name: jaeger
        ports:
        - containerPort: 9411
          name: tracing
        - containerPort: 16686
          name: web
---
# jaeger service
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  labels:
    sevice: jaeger
  namespace: monitoring
spec:
  ports:
  - port: 9411
    protocol: TCP
    name: tracing
  - port: 16686
    protocol: TCP
    name: web
  selector:
    app: jaeger
  type: NodePort








# example config
---
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: envoy-admin
  namespace: gloo-system
spec:
  spec:
    service_name: envoy
    service_namespace: gloo-system
    service_port: 19000
  type: kubernetes

---
apiVersion: gloo.solo.io/v1
kind: VirtualHost
metadata:
  name: my-services
  namespace: gloo-system
spec:
  routes:
  - request_matcher:
      path_prefix: /envoy
    single_destination:
      upstream:
        name: envoy-admin
    prefix_rewrite: /

